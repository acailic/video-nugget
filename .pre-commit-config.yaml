repos:
  # Rust hooks
  - repo: local
    hooks:
      - id: cargo-fmt
        name: cargo fmt
        entry: cargo
        language: system
        args: ['fmt', '--', '--check']
        files: \.rs$
        pass_filenames: false

      - id: cargo-clippy
        name: cargo clippy
        entry: cargo
        language: system
        args: ['clippy', '--all-targets', '--all-features', '--', '-D', 'warnings']
        files: \.rs$
        pass_filenames: false

      - id: cargo-test
        name: cargo test
        entry: cargo
        language: system
        args: ['test', '--all-features']
        files: \.rs$
        pass_filenames: false

  # Frontend hooks
  - repo: local
    hooks:
      - id: eslint
        name: ESLint
        entry: npm
        language: system
        args: ['run', 'lint']
        files: \.(js|jsx|ts|tsx)$
        pass_filenames: false

      - id: typescript-check
        name: TypeScript Check
        entry: npx
        language: system
        args: ['tsc', '--noEmit']
        files: \.(ts|tsx)$
        pass_filenames: false

  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: check-yaml
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: trailing-whitespace

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock.json

  # Commit message formatting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [optional-scope]